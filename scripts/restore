#!/bin/bash

#=================================================
# GENERIC START
#=================================================
# IMPORT GENERIC HELPERS
#=================================================

#Keep this path for calling _common.sh inside the execution's context of backup and restore scripts
source ../settings/scripts/_common.sh
source /usr/share/yunohost/helpers

#=================================================
# MANAGE SCRIPT FAILURE
#=================================================

ynh_clean_setup () {
	#### Remove this function if there's nothing to clean before calling the remove script.
	true
}
# Exit if an error occurs during the execution of the script
ynh_abort_if_errors

#=================================================
# LOAD SETTINGS
#=================================================
ynh_script_progression --message="Loading settings..." --weight=5

app=$YNH_APP_INSTANCE_NAME
final_path=/opt/yunohost/$app
mautrix_config_path="$final_path/config.yaml"

domain=$(ynh_app_setting_get --app=$app --key=domain)
server_name=$(ynh_app_setting_get --app=$app --key=server_name)
port=$(ynh_app_setting_get --app=$app --key=port)
instagrambot=$(ynh_app_setting_get --app=$app --key=instagrambot)
synapse_instance=$(ynh_app_setting_get --app=$app --key=synapse_instance)
app_service_registration_path=$(ynh_app_setting_get --app=$app --key=app_service_registration_path)
bot_is_synapse_admin=$(ynh_app_setting_get --app=$app --key=bot_is_synapse_admin)
botadmin=$(ynh_app_setting_get --app=$app --key=botadmin)
botusers=$(ynh_app_setting_get --app=$app --key=botusers)
final_path=$(ynh_app_setting_get --app=$app --key=final_path)
mautrix_version=$(ynh_app_setting_get --app=$app --key=mautrix_version)
final_path=$(ynh_app_setting_get --app=$app --key=final_path)
ynh_print_OFF
mautrix_instagram_db_pwd=$(ynh_app_setting_get --app=$app --key=mautrix_instagram_db_pwd)
ynh_print_ON

#=================================================
# SET CONSTANTS
#=================================================

synapse_db_name="matrix_$synapse_instance"
instagrambot_synapse_db_user="@$instagrambot:$server_name"
mautrix_instagram_user=$app
mautrix_instagram_db_name=$app
mautrix_instagram_db_user=$app
upstream_version=$(ynh_app_upstream_version)

#=================================================
# CHECK IF THE APP CAN BE RESTORED
#=================================================
ynh_script_progression --message="Validating restoration parameters..." --weight=1

test ! -d $final_path \
	|| ynh_die --message="There is already a directory: $final_path "

#=================================================
# STANDARD RESTORATION STEPS
#=================================================
# RESTORE THE APP MAIN DIR
#=================================================
ynh_script_progression --message="Restoring the app main directory..." --weight=1

ynh_restore_file --origin_path="$final_path"

#=================================================
# RECREATE THE DEDICATED USER
#=================================================
ynh_script_progression --message="Recreating the dedicated system user..." --weight=1

# Create the dedicated user (if not existing)
ynh_system_user_create --username=$app

#=================================================
# RESTORE USER RIGHTS
#=================================================

# Restore permissions on app files
chown -R root: $final_path
chown $mautrix_instagram_user:root -R $final_path

#=================================================
# SPECIFIC RESTORATION
#=================================================
# REINSTALL DEPENDENCIES
#=================================================
ynh_script_progression --message="Reinstalling dependencies..." --weight=100

ynh_install_app_dependencies $pkg_dependencies

ynh_install_extra_app_dependencies --repo="http://http.debian.net/debian buster-backports main" --package="golang-go"
ynh_install_extra_app_dependencies --repo="http://http.debian.net/debian buster-backports main" --package="libolm-dev"

#=================================================
# RESTORE THE POSTGRESQL DATABASE
#=================================================
ynh_script_progression --message="Restoring the PostgreSQL database..." --weight=8

ynh_psql_test_if_first_run
ynh_print_OFF
ynh_psql_create_user $mautrix_instagram_db_user $mautrix_instagram_db_pwd
ynh_print_ON
ynh_psql_execute_as_root \
--sql="CREATE DATABASE ""$mautrix_instagram_db_name"" ENCODING 'UTF8' LC_COLLATE='C' LC_CTYPE='C' template=template0 OWNER ""$mautrix_instagram_db_user"";"
ynh_psql_execute_file_as_root --file="${YNH_CWD}/dump.sql" --database="$mautrix_instagram_db_name"

#=================================================
# REGISTER SYNAPSE APP-SERVICE
#=================================================
$final_path/mautrix-instagram -g -c $mautrix_config_path -r $app_service_registration_path/$app.yaml
#$as_token=;
#$hs_token=;
#ynh_replace_string --match_string=__AS_TOKEN__ --replace_string="$as_token" --target_file=$app_service_registration_path/$app.yaml
#ynh_replace_string --match_string=__HS_TOKEN__ --replace_string="$hs_token" --target_file=$app_service_registration_path/$app.yaml
/opt/yunohost/matrix-$synapse_instance/update_synapse_for_appservice.sh \
    || ynh_die "Synapse can't restart with the appservice configuration"
# Handled by synapse: synapse_ynh adds all registration files added in $app_service_registration_path to the app_service_config_files list

#=================================================
# RESTORE SYSTEMD
#=================================================
ynh_script_progression --message="Restoring the systemd configuration..." --weight=3

ynh_restore_file --origin_path="/etc/systemd/system/$app.service"
systemctl enable $app.service

#=================================================
# RESTORE THE LOGROTATE CONFIGURATION
#=================================================

ynh_use_logrotate --logfile "/var/log/$app/log.log"
chown $mautrix_instagram_user:root -R /var/log/$app

#=================================================
# ADVERTISE SERVICE IN ADMIN PANEL
#=================================================

# if using yunohost version 3.2 or more in the 'manifest.json', a description can be added
yunohost service add $app --description "$app daemon for bridging Instagram and Matrix messages" --log "/var/log/$app/log.log"

#=================================================
# START SYSTEMD SERVICE
#=================================================
ynh_script_progression --message="Starting a systemd service..." --weight=30

ynh_systemd_action --service_name=$app --action="start"
sleep 30
    # (Note that, by default, non-admins might not have your homeserver's permission to create communities.)
    if [ "$bot_is_synapse_admin" = true ]
    then
    ynh_psql_execute_as_root --database=$synapse_db_name --sql="UPDATE users SET admin = 1 WHERE name = ""$instagrambot"";"
#    yunohost app action run $synapse_instance set_admin_user -a username=$whatsappbot
    fi
ynh_systemd_action --service_name=$app --action="restart"


#=================================================
# END OF SCRIPT
#=================================================

ynh_script_progression --message="Restoration completed for $app" --last
